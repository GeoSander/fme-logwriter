#! <?xml version="1.0" encoding="UTF-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN LogWriter,2,Workflows,24a5f4d4-9791-11e7-9d24-c42c033923d4,"Linked Always",No,NO_PARALLELISM,,No,17539,YES,No,2or3
# <p>Logs user-defined messages to FME's log file, optionally preceded and/or followed by a line divider. If desired, the <em>LogWriter</em> can output a log feature that contains the following attributes:</p>
# <p><em>_logwriter.level</em><br />
# <em>_logwriter.message</em><br />
# <em>_logwriter.time</em>  </p>
# <p>The <em>LogWriter</em> respects FME's logging settings (Tools &gt; FME Options &gt; Translation). This means that if e.g. <em>Information</em> logging has been disabled and you try to write this type of message with the <em>LogWriter</em>, nothing will be written to the log file.</p>
# <p>Log features will always be created if <em>Create Log Features</em> is set to anything else than <em>No</em>. You can use these features to write/push the (formatted) message to another file or API, or in combination with a Terminator for instance.</p>
# <h3>Notes</h3>
# <ul>
# <li>This transformer has been tested on Python 2.7 and 3.4.  </li>
# <li>If you notice a bug or desire a new feature, please contact me. Or make a <a href="https://github.com/SanderSchaminee/fme-logwriter">pull request</a>!</li>
# <li>Released under <a href="https://github.com/SanderSchaminee/fme-logwriter/blob/master/LICENSE">GNU General Public License v3.0</a>.</li>
# </ul>
# TRANSFORMER_END
#!   VIEW_POSITION="-1208.46 574.654"
#!   WORKSPACE_VERSION="1"
#!   HISTORY="January&lt;space&gt;7&lt;comma&gt;&lt;space&gt;2016,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Initial&lt;space&gt;creation,September&lt;space&gt;8&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Upgraded&lt;space&gt;to&lt;space&gt;2017.1&lt;comma&gt;&lt;space&gt;added&lt;space&gt;UTF8&lt;space&gt;+&lt;space&gt;Python&lt;space&gt;2.7&lt;solidus&gt;3.4&lt;space&gt;support&lt;space&gt;,September&lt;space&gt;12&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Added&lt;space&gt;optional&lt;space&gt;log&lt;space&gt;feature&lt;comma&gt;&lt;space&gt;line&lt;space&gt;styles&lt;space&gt;and&lt;space&gt;&lt;quote&gt;last&lt;space&gt;feature&lt;quote&gt;&lt;space&gt;option"
#!   LAST_SAVE_DATE="2017-09-12T10:05:29"
#!   ATTR_TYPE_ENCODING="SDF"
#!   BLOCKED_LOOPING="No"
#!   DOC_TOP_LEFT="-1255.07 -103.38"
#!   DOC_EXTENTS="2525.34 496.737"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   USE_MARKDOWN="YES"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   LAST_SAVE_BUILD="FME(R) 2017.1.0.0 (20170731 - Build 17539 - macosx)"
#!   FME_BUILD_NUM="17539"
#!   SHOW_ANNOTATIONS="true"
#!   MARKDOWN_USAGE="**Write Log Message**  &#10;Determines when the message will be logged. You can log each feature, the first or the last one that passes through this transformer. Note that regardless of this setting, _all_ features should always leave the _Output_ port.&#10;&#10;**Message Type**  &#10;Set the type of message you want to log. In FME Workbench, warnings will be logged in blue, (fatal) errors in red and all other types in black. Also, the message will be prefixed with the type accordingly (e.g. WARN, ERROR etc.), but this will only show up in the actual log file and not in FME&apos;s Translation Log window.&#10;&#10;**Create Log Features**  &#10;When set to _No_ (default), the _LogMessages_ port will not be used. When set to _Each Message_, a feature will be created for each feature that was logged. Note that this setting depends on the _Write Log Message_ setting, e.g. if _On Last Feature_ was specified there, only 1 log feature will be output when the last feature left the transformer.  &#10;The log feature stores the message level, text and time, similar to the LogMessageStreamer. See the overview section for more information.  &#10;When set to _Each Message incl. Line(s)_, the message will include the _Preceding Line_ and/or _Succeeding Line_ set below.&#10;&#10;**Preceding Line**  &#10;If desired, the message can be preceded by a blank/white line or a line divider similar to FME&apos;s own style.&#10;&#10;**Log Message(s)**  &#10;Specify the (multiline) text you want to log. You can type a static message, create a dynamic message using multiple attribute values or directly pass in the value of an attribute.&#10;&#10;**Succeeding Line**  &#10;If desired, the message can be succeeded by a blank/white line or a line divider similar to FME&apos;s own style."
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   PYTHON_COMPATIBILITY="2or3"
#!   XFORM_DEPRECATED="No"
#!   USAGE="&lt;p&gt;&lt;strong&gt;Write Log Message&lt;/strong&gt;&lt;br /&gt;&#10;Determines when the message will be logged. You can log each feature, the first or the last one that passes through this transformer. Note that regardless of this setting, &lt;em&gt;all&lt;/em&gt; features should always leave the &lt;em&gt;Output&lt;/em&gt; port.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Message Type&lt;/strong&gt;&lt;br /&gt;&#10;Set the type of message you want to log. In FME Workbench, warnings will be logged in blue, (fatal) errors in red and all other types in black. Also, the message will be prefixed with the type accordingly (e.g. WARN, ERROR etc.), but this will only show up in the actual log file and not in FME&apos;s Translation Log window.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Create Log Features&lt;/strong&gt;&lt;br /&gt;&#10;When set to &lt;em&gt;No&lt;/em&gt; (default), the &lt;em&gt;LogMessages&lt;/em&gt; port will not be used. When set to &lt;em&gt;Each Message&lt;/em&gt;, a feature will be created for each feature that was logged. Note that this setting depends on the &lt;em&gt;Write Log Message&lt;/em&gt; setting, e.g. if &lt;em&gt;On Last Feature&lt;/em&gt; was specified there, only 1 log feature will be output when the last feature left the transformer.&lt;br /&gt;&#10;The log feature stores the message level, text and time, similar to the LogMessageStreamer. See the overview section for more information.&lt;br /&gt;&#10;When set to &lt;em&gt;Each Message incl. Line(s)&lt;/em&gt;, the message will include the &lt;em&gt;Preceding Line&lt;/em&gt; and/or &lt;em&gt;Succeeding Line&lt;/em&gt; set below.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Preceding Line&lt;/strong&gt;&lt;br /&gt;&#10;If desired, the message can be preceded by a blank/white line or a line divider similar to FME&apos;s own style.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Log Message(s)&lt;/strong&gt;&lt;br /&gt;&#10;Specify the (multiline) text you want to log. You can type a static message, create a dynamic message using multiple attribute values or directly pass in the value of an attribute.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Succeeding Line&lt;/strong&gt;&lt;br /&gt;&#10;If desired, the message can be succeeded by a blank/white line or a line divider similar to FME&apos;s own style.&lt;/p&gt;"
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FME_DOCUMENT_PRIORGUID="73de07c8-9488-11e7-9a12-c42c033923d4,114b2ffe-948e-11e7-a3f0-c42c033923d4,35db9860-9496-11e7-bbd8-c42c033923d4,e0173ac8-94a5-11e7-bbd8-c42c033923d4,c63e3116-94a9-11e7-b4b3-c42c033923d4,47f0707e-94ce-11e7-a9e4-c42c033923d4,8d9330fc-954c-11e7-bed3-c42c033923d4,20bec952-955e-11e7-9f20-c42c033923d4,619462c4-955f-11e7-b0ef-c42c033923d4,3e1250de-9561-11e7-a29f-c42c033923d4,d3c25d8a-9562-11e7-b5d8-c42c033923d4,0709dd10-9565-11e7-9a4a-c42c033923d4,bbee4ca4-9789-11e7-8dfa-c42c033923d4,7d7e53d2-978f-11e7-8fef-c42c033923d4"
#!   ZOOM_SCALE="71"
#!   TITLE="LogWriter"
#!   SHOW_INFO_NODES="true"
#!   FME_SERVER_SERVICES=""
#!   DESCRIPTION="&lt;p&gt;Logs user-defined messages to FME&apos;s log file, optionally preceded and/or followed by a line divider. If desired, the &lt;em&gt;LogWriter&lt;/em&gt; can output a log feature that contains the following attributes:&lt;/p&gt;&#10;&lt;p&gt;&lt;em&gt;_logwriter.level&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;_logwriter.message&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;_logwriter.time&lt;/em&gt;  &lt;/p&gt;&#10;&lt;p&gt;The &lt;em&gt;LogWriter&lt;/em&gt; respects FME&apos;s logging settings (Tools &amp;gt; FME Options &amp;gt; Translation). This means that if e.g. &lt;em&gt;Information&lt;/em&gt; logging has been disabled and you try to write this type of message with the &lt;em&gt;LogWriter&lt;/em&gt;, nothing will be written to the log file.&lt;/p&gt;&#10;&lt;p&gt;Log features will always be created if &lt;em&gt;Create Log Features&lt;/em&gt; is set to anything else than &lt;em&gt;No&lt;/em&gt;. You can use these features to write/push the (formatted) message to another file or API, or in combination with a Terminator for instance.&lt;/p&gt;&#10;&lt;h3&gt;Notes&lt;/h3&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;This transformer has been tested on Python 2.7 and 3.4.  &lt;/li&gt;&#10;&lt;li&gt;If you notice a bug or desire a new feature, please contact me. Or make a &lt;a href=&quot;https://github.com/SanderSchaminee/fme-logwriter&quot;&gt;pull request&lt;/a&gt;!&lt;/li&gt;&#10;&lt;li&gt;Released under &lt;a href=&quot;https://github.com/SanderSchaminee/fme-logwriter/blob/master/LICENSE&quot;&gt;GNU General Public License v3.0&lt;/a&gt;.&lt;/li&gt;&#10;&lt;/ul&gt;"
#!   MARKDOWN_DESCRIPTION="Logs user-defined messages to FME&apos;s log file, optionally preceded and/or followed by a line divider. If desired, the _LogWriter_ can output a log feature that contains the following attributes:&#10;&#10;_\_logwriter.level_  &#10;_\_logwriter.message_  &#10;_\_logwriter.time_  &#10;&#10;The _LogWriter_ respects FME&apos;s logging settings (Tools &gt; FME Options &gt; Translation). This means that if e.g. _Information_ logging has been disabled and you try to write this type of message with the _LogWriter_, nothing will be written to the log file.&#10;&#10;Log features will always be created if _Create Log Features_ is set to anything else than _No_. You can use these features to write/push the (formatted) message to another file or API, or in combination with a Terminator for instance.&#10;&#10;### Notes  &#10;- This transformer has been tested on Python 2.7 and 3.4.  &#10;- If you notice a bug or desire a new feature, please contact me. Or make a [pull request](https://github.com/SanderSchaminee/fme-logwriter)!&#10;- Released under [GNU General Public License v3.0](https://github.com/SanderSchaminee/fme-logwriter/blob/master/LICENSE)."
#!   ITERATION_COUNT_ATTR=""
#!   FMX_INSERT_MODE="Linked Always"
#!   PASSWORD=""
#!   MAX_LOOP_ITERATIONS=""
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   FME_DOCUMENT_GUID="24a5f4d4-9791-11e7-9d24-c42c033923d4"
#!   CATEGORY="Workflows"
#!   FME_PROCESS_GROUP_BY=""
#!   FME_LINKED_TRANSFORMER_VERSION="2"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI CHOICE_OR_ATTR __LOG_MOMENT &quot;On First Feature&quot;%&quot;On Each Feature&quot;%&quot;On Last Feature&quot; Write Log Message:"
#!   DEFAULT_VALUE="On Each Feature"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI LOOKUP_CHOICE_OR_ATTR __LOG_TYPE Information,0%Warning,1%Error,2%Fatal&lt;space&gt;Error,3%Statistics,4 Message Type:"
#!   DEFAULT_VALUE="1"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI CHOICE_OR_ATTR __LOG_FEATURE No%&quot;For Each Message&quot;%&quot;For Each Message incl. Line(s)&quot; Create Log Features:"
#!   DEFAULT_VALUE="No"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI CHOICE_OR_ATTR __LINE_TOP No%&quot;Blank Line&quot;%=-=-=-=-=%========%++++++++%----------- Preceding Line:"
#!   DEFAULT_VALUE="No"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI TEXT_EDIT_OR_NUM_OR_ATTR __LOG_MESSAGE Log Message(s):"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI CHOICE_OR_ATTR __LINE_BOTTOM No%&quot;Blank Line&quot;%=-=-=-=-=%========%++++++++%----------- Succeeding Line:"
#!   DEFAULT_VALUE="No"
#!   IS_STAND_ALONE="true"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! <COMMENT
#!   IDENTIFIER="24"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Tests if it&apos;s a normal&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;feature (Passed) or&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;a log feature (Failed)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="259.214 393.357"
#!   TOP_LEFT="259.214 393.357"
#!   BOTTOM_RIGHT="258.214 394.357"
#!   BOUNDING_RECT="259.214 393.357 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="12"
#! />
#! <COMMENT
#!   IDENTIFIER="25"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Cleanup&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="847.016 297.356"
#!   TOP_LEFT="847.016 297.356"
#!   BOTTOM_RIGHT="846.016 298.356"
#!   BOUNDING_RECT="847.016 297.356 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="13"
#! />
#! <COMMENT
#!   IDENTIFIER="27"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Logs messages and&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;(optionally) creates&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;log features&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="-240.898 393.357"
#!   TOP_LEFT="-240.898 393.357"
#!   BOTTOM_RIGHT="-241.898 394.357"
#!   BOUNDING_RECT="-240.898 393.357 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="1"
#! />
#! <COMMENT
#!   IDENTIFIER="26"
#!   COMMENT_VALUE="&lt;b&gt;ParameterFetcher&amp;nbsp;[ParameterFetcher&amp;nbsp;Version&amp;nbsp;4]&lt;/b&gt;&lt;br&gt;$(__LOG_TYPE)&amp;nbsp;-&amp;gt;&amp;nbsp;__log_type&lt;br&gt;$(__LOG_MOMENT)&amp;nbsp;-&amp;gt;&amp;nbsp;__log_moment&lt;br&gt;$(__LINE_TOP)&amp;nbsp;-&amp;gt;&amp;nbsp;__log_line_top&lt;br&gt;$(__LOG_MESSAGE)&amp;nbsp;-&amp;gt;&amp;nbsp;__log_message&lt;br&gt;$(__LINE_BOTTOM)&amp;nbsp;-&amp;gt;&amp;nbsp;__log_line_bottom&lt;br&gt;$(__LOG_FEATURE)&amp;nbsp;-&amp;gt;&amp;nbsp;__log_feature"
#!   POSITION="-1021.18 -103.38"
#!   TOP_LEFT="-1021.18 -103.38"
#!   BOTTOM_RIGHT="-1022.18 -102.38"
#!   BOUNDING_RECT="-1021.18 -103.38 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="true"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="17"
#! />
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="1"
#!   TYPE="PythonCaller"
#!   VERSION="4"
#!   POSITION="-240.898 118.876"
#!   BOUNDING_RECT="-240.898 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__log_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_moment" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_line_top" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_message" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_line_bottom" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_feature" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.level" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.message" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.time" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PYTHONSOURCE" PARM_VALUE="#&lt;space&gt;-*-&lt;space&gt;coding:&lt;space&gt;UTF-8&lt;space&gt;-*-&lt;lf&gt;import&lt;space&gt;fme&lt;lf&gt;import&lt;space&gt;fmeobjects&lt;lf&gt;from&lt;space&gt;six&lt;space&gt;import&lt;space&gt;PY2&lt;lf&gt;from&lt;space&gt;time&lt;space&gt;import&lt;space&gt;strftime&lt;comma&gt;&lt;space&gt;localtime&lt;lf&gt;&lt;lf&gt;#&lt;space&gt;GLOBAL&lt;space&gt;CONSTANTS&lt;lf&gt;#&lt;space&gt;Input&lt;space&gt;parameter&lt;space&gt;choices&lt;space&gt;should&lt;space&gt;reflect&lt;space&gt;parameter&lt;space&gt;configurations!&lt;lf&gt;LOG_MOMENT_FIRST&lt;space&gt;=&lt;space&gt;&lt;apos&gt;On&lt;space&gt;First&lt;space&gt;Feature&lt;apos&gt;&lt;lf&gt;LOG_MOMENT_EACH&lt;space&gt;=&lt;space&gt;&lt;apos&gt;On&lt;space&gt;Each&lt;space&gt;Feature&lt;apos&gt;&lt;lf&gt;LOG_MOMENT_LAST&lt;space&gt;=&lt;space&gt;&lt;apos&gt;On&lt;space&gt;Last&lt;space&gt;Feature&lt;apos&gt;&lt;lf&gt;LOG_ATTR_MSGNONE&lt;space&gt;=&lt;space&gt;&lt;apos&gt;No&lt;apos&gt;&lt;lf&gt;LOG_ATTR_MSGONLY&lt;space&gt;=&lt;space&gt;&lt;apos&gt;For&lt;space&gt;Each&lt;space&gt;Message&lt;apos&gt;&lt;lf&gt;LOG_ATTR_MSGLINE&lt;space&gt;=&lt;space&gt;&lt;apos&gt;For&lt;space&gt;Each&lt;space&gt;Message&lt;space&gt;incl.&lt;space&gt;Line&lt;openparen&gt;s&lt;closeparen&gt;&lt;apos&gt;&lt;lf&gt;LOG_LINE_NONE&lt;space&gt;=&lt;space&gt;&lt;apos&gt;No&lt;apos&gt;&lt;lf&gt;LOG_LINE_BLANK&lt;space&gt;=&lt;space&gt;&lt;apos&gt;Blank&lt;space&gt;Line&lt;apos&gt;&lt;lf&gt;LOG_LINE_DASH&lt;space&gt;=&lt;space&gt;&lt;apos&gt;=-=-=-=-=&lt;apos&gt;&lt;lf&gt;LOG_LINE_SOLID&lt;space&gt;=&lt;space&gt;&lt;apos&gt;========&lt;apos&gt;&lt;lf&gt;LOG_LINE_PLUS&lt;space&gt;=&lt;space&gt;&lt;apos&gt;++++++++&lt;apos&gt;&lt;lf&gt;LOG_LINE_MINUS&lt;space&gt;=&lt;space&gt;&lt;apos&gt;-----------&lt;apos&gt;&lt;lf&gt;LOG_TYPES&lt;space&gt;=&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;fmeobjects.FME_INFORM:&lt;space&gt;&lt;apos&gt;INFORM&lt;apos&gt;&lt;comma&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#0&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;fmeobjects.FME_WARN:&lt;space&gt;&lt;apos&gt;WARN&lt;apos&gt;&lt;comma&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;fmeobjects.FME_ERROR:&lt;space&gt;&lt;apos&gt;ERROR&lt;apos&gt;&lt;comma&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#2&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;fmeobjects.FME_FATAL:&lt;space&gt;&lt;apos&gt;FATAL&lt;apos&gt;&lt;comma&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#3&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;fmeobjects.FME_STATISTIC:&lt;space&gt;&lt;apos&gt;STATS&lt;apos&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#4&lt;lf&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;#&lt;space&gt;Attribute&lt;space&gt;names&lt;space&gt;to&lt;space&gt;get&lt;space&gt;input&lt;space&gt;parameters&lt;space&gt;&lt;openparen&gt;should&lt;space&gt;match&lt;space&gt;ParameterFetcher&lt;closeparen&gt;&lt;lf&gt;ATTR_LOG_TYPE&lt;space&gt;=&lt;space&gt;&lt;apos&gt;__log_type&lt;apos&gt;&lt;lf&gt;ATTR_LOG_MOMENT&lt;space&gt;=&lt;space&gt;&lt;apos&gt;__log_moment&lt;apos&gt;&lt;lf&gt;ATTR_LOG_ATTRIBUTE&lt;space&gt;=&lt;space&gt;&lt;apos&gt;__log_feature&lt;apos&gt;&lt;lf&gt;ATTR_LOG_LINE_TOP&lt;space&gt;=&lt;space&gt;&lt;apos&gt;__log_line_top&lt;apos&gt;&lt;lf&gt;ATTR_LOG_LINE_BOT&lt;space&gt;=&lt;space&gt;&lt;apos&gt;__log_line_bottom&lt;apos&gt;&lt;lf&gt;ATTR_LOG_MESSAGE&lt;space&gt;=&lt;space&gt;&lt;apos&gt;__log_message&lt;apos&gt;&lt;lf&gt;ATTR_LOG_OUTPUT_LEVEL&lt;space&gt;=&lt;space&gt;&lt;apos&gt;_logwriter.level&lt;apos&gt;&lt;lf&gt;ATTR_LOG_OUTPUT_MESSAGE&lt;space&gt;=&lt;space&gt;&lt;apos&gt;_logwriter.message&lt;apos&gt;&lt;lf&gt;ATTR_LOG_OUTPUT_TIME&lt;space&gt;=&lt;space&gt;&lt;apos&gt;_logwriter.time&lt;apos&gt;&lt;lf&gt;&lt;lf&gt;class&lt;space&gt;LogWriter&lt;openparen&gt;object&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;PythonCaller&lt;space&gt;class&lt;space&gt;to&lt;space&gt;log&lt;space&gt;messages&lt;space&gt;&lt;openparen&gt;and&lt;space&gt;create&lt;space&gt;log&lt;space&gt;features&lt;closeparen&gt;.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;__init__&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log&lt;space&gt;=&lt;space&gt;fmeobjects.FMELogFile&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.skip&lt;space&gt;=&lt;space&gt;False&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.buffer&lt;space&gt;=&lt;space&gt;None&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log_type&lt;space&gt;=&lt;space&gt;LOG_TYPES&lt;openbracket&gt;fmeobjects.FME_INFORM&lt;closebracket&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;default&lt;space&gt;=&lt;space&gt;INFORM&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log_moment&lt;space&gt;=&lt;space&gt;LOG_MOMENT_EACH&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;default&lt;space&gt;=&lt;space&gt;&lt;quote&gt;For&lt;space&gt;Each&lt;space&gt;Feature&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;input&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;PythonCaller&lt;space&gt;input&lt;space&gt;method:&lt;space&gt;handles&lt;space&gt;each&lt;space&gt;incoming&lt;space&gt;feature.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;self.buffer:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;When&lt;space&gt;&lt;quote&gt;On&lt;space&gt;Last&lt;space&gt;Feature&lt;quote&gt;&lt;space&gt;was&lt;space&gt;chosen&lt;comma&gt;&lt;space&gt;output&lt;space&gt;previously&lt;space&gt;stored&lt;space&gt;feature&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;self.buffer&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;self.set_log_moment&lt;openparen&gt;feature&lt;closeparen&gt;&lt;space&gt;!=&lt;space&gt;LOG_MOMENT_LAST&lt;space&gt;and&lt;space&gt;not&lt;space&gt;self.skip:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log_message&lt;openparen&gt;feature&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;self.log_moment&lt;space&gt;==&lt;space&gt;LOG_MOMENT_FIRST:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.skip&lt;space&gt;=&lt;space&gt;True&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;elif&lt;space&gt;self.set_log_moment&lt;openparen&gt;feature&lt;closeparen&gt;&lt;space&gt;==&lt;space&gt;LOG_MOMENT_LAST:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;When&lt;space&gt;&lt;quote&gt;On&lt;space&gt;Last&lt;space&gt;Feature&lt;quote&gt;&lt;space&gt;is&lt;space&gt;chosen&lt;comma&gt;&lt;space&gt;store&lt;space&gt;current&lt;space&gt;feature&lt;space&gt;and&lt;space&gt;proceed&lt;space&gt;to&lt;space&gt;the&lt;space&gt;next&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.buffer&lt;space&gt;=&lt;space&gt;feature.clone&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;feature&lt;closeparen&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;log_message&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Formats&lt;space&gt;the&lt;space&gt;message&lt;space&gt;and&lt;space&gt;logs&lt;space&gt;it.&lt;space&gt;Optionally&lt;space&gt;creates&lt;space&gt;a&lt;space&gt;log&lt;space&gt;feature.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;message&lt;comma&gt;&lt;space&gt;utf8&lt;space&gt;=&lt;space&gt;self.to_str&lt;openparen&gt;feature.getAttribute&lt;openparen&gt;ATTR_LOG_MESSAGE&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.set_log_type&lt;openparen&gt;feature&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;get&lt;space&gt;line&lt;openparen&gt;s&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;top_line&lt;space&gt;=&lt;space&gt;self.get_line&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;ATTR_LOG_LINE_TOP&lt;comma&gt;&lt;space&gt;utf8&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;bot_line&lt;space&gt;=&lt;space&gt;self.get_line&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;ATTR_LOG_LINE_BOT&lt;comma&gt;&lt;space&gt;utf8&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lines&lt;space&gt;=&lt;space&gt;&lt;openbracket&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;top_line:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;log&lt;space&gt;top&lt;space&gt;line&lt;space&gt;when&lt;space&gt;specified&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;top_line&lt;comma&gt;&lt;space&gt;self.log_type&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lines.append&lt;openparen&gt;top_line.strip&lt;openparen&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;log_time&lt;space&gt;=&lt;space&gt;strftime&lt;openparen&gt;&lt;quote&gt;%Y-%m-%d&lt;space&gt;%H:%M:%S&lt;quote&gt;&lt;comma&gt;&lt;space&gt;localtime&lt;openparen&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;record&lt;space&gt;time&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;message&lt;comma&gt;&lt;space&gt;self.log_type&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;output&lt;space&gt;message&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lines.append&lt;openparen&gt;message&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;bot_line:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;log&lt;space&gt;bottom&lt;space&gt;line&lt;space&gt;when&lt;space&gt;specified&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;bot_line&lt;comma&gt;&lt;space&gt;self.log_type&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lines.append&lt;openparen&gt;bot_line.strip&lt;openparen&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;create&lt;space&gt;and&lt;space&gt;output&lt;space&gt;a&lt;space&gt;log&lt;space&gt;feature&lt;comma&gt;&lt;space&gt;if&lt;space&gt;needed&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;log_attr&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;ATTR_LOG_ATTRIBUTE&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;log_attr&lt;space&gt;==&lt;space&gt;LOG_ATTR_MSGNONE:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;log_feature&lt;space&gt;=&lt;space&gt;fmeobjects.FMEFeature&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;log_feature.setAttribute&lt;openparen&gt;ATTR_LOG_OUTPUT_TIME&lt;comma&gt;&lt;space&gt;log_time&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;log_feature.setAttribute&lt;openparen&gt;ATTR_LOG_OUTPUT_LEVEL&lt;comma&gt;&lt;space&gt;LOG_TYPES&lt;openbracket&gt;self.log_type&lt;closebracket&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;log_attr&lt;space&gt;==&lt;space&gt;LOG_ATTR_MSGLINE:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;message&lt;space&gt;=&lt;space&gt;&lt;apos&gt;&lt;backslash&gt;n&lt;apos&gt;.join&lt;openparen&gt;lines&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;message&lt;space&gt;=&lt;space&gt;self.to_unicode&lt;openparen&gt;message&lt;comma&gt;&lt;space&gt;utf8&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;log_feature.setAttribute&lt;openparen&gt;ATTR_LOG_OUTPUT_MESSAGE&lt;comma&gt;&lt;space&gt;message&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;log_feature&lt;closeparen&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;at&gt;staticmethod&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;to_str&lt;openparen&gt;value&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Safely&lt;space&gt;encodes&lt;space&gt;to&lt;space&gt;UTF8&lt;space&gt;str&lt;space&gt;only&lt;space&gt;if&lt;space&gt;it&lt;apos&gt;s&lt;space&gt;Python&lt;space&gt;2&lt;space&gt;unicode.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;PY2&lt;space&gt;and&lt;space&gt;isinstance&lt;openparen&gt;value&lt;comma&gt;&lt;space&gt;unicode&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;convert&lt;space&gt;Python&lt;space&gt;2&lt;space&gt;unicode&lt;space&gt;to&lt;space&gt;str&lt;space&gt;using&lt;space&gt;UTF8&lt;space&gt;encoding&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;value.encode&lt;openparen&gt;&lt;apos&gt;utf8&lt;apos&gt;&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;True&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;value&lt;comma&gt;&lt;space&gt;False&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;at&gt;staticmethod&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;to_unicode&lt;openparen&gt;value&lt;comma&gt;&lt;space&gt;decode&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Safely&lt;space&gt;decodes&lt;space&gt;to&lt;space&gt;unicode&lt;space&gt;only&lt;space&gt;if&lt;space&gt;it&lt;space&gt;was&lt;space&gt;UTF8&lt;space&gt;encoded&lt;space&gt;earlier.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;PY2&lt;space&gt;and&lt;space&gt;decode&lt;space&gt;and&lt;space&gt;not&lt;space&gt;isinstance&lt;openparen&gt;value&lt;comma&gt;&lt;space&gt;unicode&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;convert&lt;space&gt;str&lt;space&gt;to&lt;space&gt;Python&lt;space&gt;2&lt;space&gt;unicode&lt;space&gt;using&lt;space&gt;UTF8&lt;space&gt;decoding&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;value.decode&lt;openparen&gt;&lt;apos&gt;utf8&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;value&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;get_line&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;comma&gt;&lt;space&gt;line_attribute&lt;comma&gt;&lt;space&gt;encode&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Creates&lt;space&gt;a&lt;space&gt;line&lt;space&gt;based&lt;space&gt;on&lt;space&gt;user&lt;space&gt;input.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;line_type&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;line_attribute&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;line&lt;space&gt;=&lt;space&gt;&lt;apos&gt;&lt;apos&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;line_type&lt;space&gt;==&lt;space&gt;LOG_LINE_BLANK:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;line&lt;space&gt;=&lt;space&gt;&lt;apos&gt;&lt;space&gt;&lt;apos&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;space&lt;space&gt;to&lt;space&gt;prevent&lt;space&gt;trimdown&lt;space&gt;to&lt;space&gt;nothing&lt;space&gt;in&lt;space&gt;Translation&lt;space&gt;Log&lt;space&gt;Window&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;elif&lt;space&gt;line_type&lt;space&gt;in&lt;space&gt;&lt;openparen&gt;LOG_LINE_DASH&lt;comma&gt;&lt;space&gt;LOG_LINE_SOLID&lt;comma&gt;&lt;space&gt;LOG_LINE_MINUS&lt;comma&gt;&lt;space&gt;LOG_LINE_PLUS&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;line&lt;space&gt;=&lt;space&gt;line_type&lt;openbracket&gt;:2&lt;closebracket&gt;&lt;space&gt;*&lt;space&gt;39&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;a&lt;space&gt;line&lt;space&gt;is&lt;space&gt;max&lt;space&gt;78&lt;space&gt;chars&lt;space&gt;long&lt;space&gt;&lt;openparen&gt;FME&lt;space&gt;standard&lt;space&gt;log&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;else:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;line&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;encode:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;line.encode&lt;openparen&gt;&lt;apos&gt;utf8&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;line&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;set_log_type&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Reads&lt;space&gt;log&lt;space&gt;type&lt;space&gt;&lt;openparen&gt;error&lt;comma&gt;&lt;space&gt;info&lt;space&gt;etc.&lt;closeparen&gt;&lt;space&gt;and&lt;space&gt;sets&lt;space&gt;class&lt;space&gt;variable.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;log_type&lt;space&gt;=&lt;space&gt;int&lt;openparen&gt;feature.getAttribute&lt;openparen&gt;ATTR_LOG_TYPE&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;pass&lt;space&gt;&lt;space&gt;#&lt;space&gt;value&lt;space&gt;could&lt;space&gt;not&lt;space&gt;be&lt;space&gt;converted&lt;space&gt;to&lt;space&gt;int&lt;comma&gt;&lt;space&gt;keep&lt;space&gt;default&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;log_type&lt;space&gt;in&lt;space&gt;LOG_TYPES:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log_type&lt;space&gt;=&lt;space&gt;log_type&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;set_log_moment&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Reads&lt;space&gt;log&lt;space&gt;moment&lt;space&gt;&lt;openparen&gt;each&lt;comma&gt;&lt;space&gt;first&lt;comma&gt;&lt;space&gt;last&lt;closeparen&gt;&lt;space&gt;and&lt;space&gt;sets&lt;space&gt;+&lt;space&gt;returns&lt;space&gt;class&lt;space&gt;variable.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;log_moment&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;ATTR_LOG_MOMENT&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;log_moment&lt;space&gt;in&lt;space&gt;&lt;openparen&gt;LOG_MOMENT_EACH&lt;comma&gt;&lt;space&gt;LOG_MOMENT_FIRST&lt;comma&gt;&lt;space&gt;LOG_MOMENT_LAST&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log_moment&lt;space&gt;=&lt;space&gt;log_moment&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;self.log_moment&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;close&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;PythonCaller&lt;space&gt;close&lt;space&gt;method.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;self.buffer&lt;space&gt;and&lt;space&gt;self.log_moment&lt;space&gt;==&lt;space&gt;LOG_MOMENT_LAST:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;if&lt;space&gt;there&lt;apos&gt;s&lt;space&gt;a&lt;space&gt;feature&lt;space&gt;in&lt;space&gt;the&lt;space&gt;buffer&lt;comma&gt;&lt;space&gt;it&lt;apos&gt;s&lt;space&gt;the&lt;space&gt;last&lt;space&gt;one&lt;comma&gt;&lt;space&gt;so&lt;space&gt;process&lt;space&gt;it&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log_message&lt;openparen&gt;self.buffer.clone&lt;openparen&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;self.buffer&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;del&lt;space&gt;self"/>
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="HIDE_ATTRIBUTES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="PythonLogger"/>
#!     <XFORM_PARM PARM_NAME="PYTHONSYMBOL" PARM_VALUE="LogWriter"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE="_logwriter.level _logwriter.message _logwriter.time"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="13"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="760.889 118.876"
#!   BOUNDING_RECT="760.889 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__log_message,__log_line_top,__log_type,_logwriter.message,__log_feature,__log_moment,_logwriter.level,__log_line_bottom,_logwriter.time"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="17"
#!   TYPE="ParameterFetcher"
#!   VERSION="4"
#!   POSITION="-747.883 118.876"
#!   BOUNDING_RECT="-747.883 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__log_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_moment" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_line_top" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_message" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_line_bottom" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_feature" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="XFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ParameterFetcher"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="__log_type $(__LOG_TYPE) __log_moment $(__LOG_MOMENT) __log_line_top $(__LINE_TOP) __log_message $(__LOG_MESSAGE) __log_line_bottom $(__LINE_BOTTOM) __log_feature $(__LOG_FEATURE)"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="12"
#!   TYPE="Tester"
#!   VERSION="2"
#!   POSITION="259.214 118.876"
#!   BOUNDING_RECT="259.214 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__log_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_moment" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_line_top" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_message" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_line_bottom" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__log_feature" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.level" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.message" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.time" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="__log_type" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__log_moment" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__log_line_top" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__log_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__log_line_bottom" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__log_feature" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.level" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.time" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST _logwriter.level ATTRIBUTE_IS_MISSING &quot;&quot;&#10;TEST _logwriter.message ATTRIBUTE_IS_MISSING &quot;&quot;&#10;TEST _logwriter.time ATTRIBUTE_IS_MISSING &quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="TEST_LIST" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_DESCRIPTION" PARM_VALUE="&quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="AND"/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="Automatic"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="21"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="764.409 -62.1112"
#!   BOUNDING_RECT="764.409 -62.1112 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_logwriter.level" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.message" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_logwriter.time" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover_2"/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__log_message,__log_line_top,__log_type,__log_feature,__log_moment,__log_line_bottom"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="9"
#!   NAME="Input"
#!   POSITION="-1255.07 118.876"
#!   BOUNDING_RECT="-1255.07 118.876 -1 -1"
#!   COLLAPSED="false"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="11"
#!   NAME="Output"
#!   POSITION="1270.27 118.876"
#!   BOUNDING_RECT="1270.27 118.876 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="10"
#!   NAME="LogMessages"
#!   POSITION="1270.27 -62.1112"
#!   BOUNDING_RECT="1270.27 -62.1112 -1 -1"
#!   COLLAPSED="false"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="18"
#!   SOURCE_NODE="9"
#!   TARGET_NODE="17"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="19"
#!   SOURCE_NODE="1"
#!   TARGET_NODE="12"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="20"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="13"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="13"
#!   TARGET_NODE="11"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="16"
#!   SOURCE_NODE="17"
#!   TARGET_NODE="1"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="23"
#!   SOURCE_NODE="21"
#!   TARGET_NODE="10"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="22"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="21"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>
FME_PYTHON_VERSION 2or3
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)___LOG_MOMENT On Each Feature
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)___LOG_TYPE 1
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)___LOG_FEATURE No
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)___LINE_TOP No
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)___LOG_MESSAGE 
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)___LINE_BOTTOM No
#! START_HEADER
#! END_HEADER

LOG_FILTER_MASK -1
DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO LogWriter_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(LogWriter_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(LogWriter_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(LogWriter_WORKSPACE_NAME)_Input1505203529 Input Splitter"   INPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------

Tcl2 proc $(LogWriter_WORKSPACE_NAME)_ParameterFetcher_doFetch {} {    foreach {name val} {"__log_type {$($(LogWriter_WORKSPACE_NAME)___LOG_TYPE)} __log_moment {$($(LogWriter_WORKSPACE_NAME)___LOG_MOMENT$encode)} __log_line_top {$($(LogWriter_WORKSPACE_NAME)___LINE_TOP$encode)} __log_message {$($(LogWriter_WORKSPACE_NAME)___LOG_MESSAGE)} __log_line_bottom {$($(LogWriter_WORKSPACE_NAME)___LINE_BOTTOM$encode)} __log_feature {$($(LogWriter_WORKSPACE_NAME)___LOG_FEATURE$encode)}"} {         if { [string match {*<at>*} $val] == 1 } {             set val [FME_Execute EvaluateExpression {STRING} $val {$(LogWriter_WORKSPACE_NAME)_ParameterFetcher}];         } elseif {[string match {*FME_CONDITIONAL*} $val] == 1} {             set val [FME_Execute EvaluateExpression {STRING} $val {$(LogWriter_WORKSPACE_NAME)_ParameterFetcher}];         } else {             set val [FME_DecodeTextOrAttr $val];         };       FME_SetAttribute [FME_DecodeText $name] $val    } }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_ParameterFetcher    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Input"    OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"         @Tcl2($(LogWriter_WORKSPACE_NAME)_ParameterFetcher_doFetch)

# -------------------------------------------------------------------------


FME_PYTHON_PATH "$(FME_MF_DIR)"

FACTORY_DEF * PythonFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_PythonLogger    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"    SYMBOL_NAME LogWriter    PYTHON_NAMESPACE FMEOBJECTS    SOURCE_CODE #<space>-*-<space>coding:<space>UTF-8<space>-*-<lf>import<space>fme<lf>import<space>fmeobjects<lf>from<space>six<space>import<space>PY2<lf>from<space>time<space>import<space>strftime<comma><space>localtime<lf><lf>#<space>GLOBAL<space>CONSTANTS<lf>#<space>Input<space>parameter<space>choices<space>should<space>reflect<space>parameter<space>configurations!<lf>LOG_MOMENT_FIRST<space>=<space><apos>On<space>First<space>Feature<apos><lf>LOG_MOMENT_EACH<space>=<space><apos>On<space>Each<space>Feature<apos><lf>LOG_MOMENT_LAST<space>=<space><apos>On<space>Last<space>Feature<apos><lf>LOG_ATTR_MSGNONE<space>=<space><apos>No<apos><lf>LOG_ATTR_MSGONLY<space>=<space><apos>For<space>Each<space>Message<apos><lf>LOG_ATTR_MSGLINE<space>=<space><apos>For<space>Each<space>Message<space>incl.<space>Line<openparen>s<closeparen><apos><lf>LOG_LINE_NONE<space>=<space><apos>No<apos><lf>LOG_LINE_BLANK<space>=<space><apos>Blank<space>Line<apos><lf>LOG_LINE_DASH<space>=<space><apos>=-=-=-=-=<apos><lf>LOG_LINE_SOLID<space>=<space><apos>========<apos><lf>LOG_LINE_PLUS<space>=<space><apos>++++++++<apos><lf>LOG_LINE_MINUS<space>=<space><apos>-----------<apos><lf>LOG_TYPES<space>=<space><opencurly><lf><space><space><space><space>fmeobjects.FME_INFORM:<space><apos>INFORM<apos><comma><space><space><space><space><space><space><space><space>#0<lf><space><space><space><space>fmeobjects.FME_WARN:<space><apos>WARN<apos><comma><space><space><space><space><space><space><space><space><space><space><space><space>#1<lf><space><space><space><space>fmeobjects.FME_ERROR:<space><apos>ERROR<apos><comma><space><space><space><space><space><space><space><space><space><space>#2<lf><space><space><space><space>fmeobjects.FME_FATAL:<space><apos>FATAL<apos><comma><space><space><space><space><space><space><space><space><space><space>#3<lf><space><space><space><space>fmeobjects.FME_STATISTIC:<space><apos>STATS<apos><space><space><space><space><space><space><space>#4<lf><closecurly><lf><lf>#<space>Attribute<space>names<space>to<space>get<space>input<space>parameters<space><openparen>should<space>match<space>ParameterFetcher<closeparen><lf>ATTR_LOG_TYPE<space>=<space><apos>__log_type<apos><lf>ATTR_LOG_MOMENT<space>=<space><apos>__log_moment<apos><lf>ATTR_LOG_ATTRIBUTE<space>=<space><apos>__log_feature<apos><lf>ATTR_LOG_LINE_TOP<space>=<space><apos>__log_line_top<apos><lf>ATTR_LOG_LINE_BOT<space>=<space><apos>__log_line_bottom<apos><lf>ATTR_LOG_MESSAGE<space>=<space><apos>__log_message<apos><lf>ATTR_LOG_OUTPUT_LEVEL<space>=<space><apos>_logwriter.level<apos><lf>ATTR_LOG_OUTPUT_MESSAGE<space>=<space><apos>_logwriter.message<apos><lf>ATTR_LOG_OUTPUT_TIME<space>=<space><apos>_logwriter.time<apos><lf><lf>class<space>LogWriter<openparen>object<closeparen>:<lf><space><space><space><space><quote><quote><quote>PythonCaller<space>class<space>to<space>log<space>messages<space><openparen>and<space>create<space>log<space>features<closeparen>.<quote><quote><quote><lf><space><space><space><space>def<space>__init__<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>self.log<space>=<space>fmeobjects.FMELogFile<openparen><closeparen><lf><space><space><space><space><space><space><space><space>self.skip<space>=<space>False<lf><space><space><space><space><space><space><space><space>self.buffer<space>=<space>None<lf><space><space><space><space><space><space><space><space>self.log_type<space>=<space>LOG_TYPES<openbracket>fmeobjects.FME_INFORM<closebracket><space><space>#<space>default<space>=<space>INFORM<lf><space><space><space><space><space><space><space><space>self.log_moment<space>=<space>LOG_MOMENT_EACH<space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>default<space>=<space><quote>For<space>Each<space>Feature<quote><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>input<openparen>self<comma><space>feature<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>PythonCaller<space>input<space>method:<space>handles<space>each<space>incoming<space>feature.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>if<space>self.buffer:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>When<space><quote>On<space>Last<space>Feature<quote><space>was<space>chosen<comma><space>output<space>previously<space>stored<space>feature<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.pyoutput<openparen>self.buffer<closeparen><lf><space><space><space><space><space><space><space><space>if<space>self.set_log_moment<openparen>feature<closeparen><space>!=<space>LOG_MOMENT_LAST<space>and<space>not<space>self.skip:<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.log_message<openparen>feature<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>self.log_moment<space>==<space>LOG_MOMENT_FIRST:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.skip<space>=<space>True<lf><space><space><space><space><space><space><space><space>elif<space>self.set_log_moment<openparen>feature<closeparen><space>==<space>LOG_MOMENT_LAST:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>When<space><quote>On<space>Last<space>Feature<quote><space>is<space>chosen<comma><space>store<space>current<space>feature<space>and<space>proceed<space>to<space>the<space>next<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.buffer<space>=<space>feature.clone<openparen><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>return<lf><space><space><space><space><space><space><space><space>self.pyoutput<openparen>feature<closeparen><lf><lf><space><space><space><space>def<space>log_message<openparen>self<comma><space>feature<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Formats<space>the<space>message<space>and<space>logs<space>it.<space>Optionally<space>creates<space>a<space>log<space>feature.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>message<comma><space>utf8<space>=<space>self.to_str<openparen>feature.getAttribute<openparen>ATTR_LOG_MESSAGE<closeparen><closeparen><lf><space><space><space><space><space><space><space><space>self.set_log_type<openparen>feature<closeparen><lf><space><space><space><space><space><space><space><space>#<space>get<space>line<openparen>s<closeparen><lf><space><space><space><space><space><space><space><space>top_line<space>=<space>self.get_line<openparen>feature<comma><space>ATTR_LOG_LINE_TOP<comma><space>utf8<closeparen><lf><space><space><space><space><space><space><space><space>bot_line<space>=<space>self.get_line<openparen>feature<comma><space>ATTR_LOG_LINE_BOT<comma><space>utf8<closeparen><lf><space><space><space><space><space><space><space><space>lines<space>=<space><openbracket><closebracket><lf><space><space><space><space><space><space><space><space>if<space>top_line:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>log<space>top<space>line<space>when<space>specified<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen>top_line<comma><space>self.log_type<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>lines.append<openparen>top_line.strip<openparen><closeparen><closeparen><lf><space><space><space><space><space><space><space><space>log_time<space>=<space>strftime<openparen><quote>%Y-%m-%d<space>%H:%M:%S<quote><comma><space>localtime<openparen><closeparen><closeparen><space><space><space>#<space>record<space>time<lf><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen>message<comma><space>self.log_type<closeparen><space><space><space><space><space><space><space>#<space>output<space>message<lf><space><space><space><space><space><space><space><space>lines.append<openparen>message<closeparen><lf><space><space><space><space><space><space><space><space>if<space>bot_line:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>log<space>bottom<space>line<space>when<space>specified<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen>bot_line<comma><space>self.log_type<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>lines.append<openparen>bot_line.strip<openparen><closeparen><closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space><space><space><space><space>#<space>create<space>and<space>output<space>a<space>log<space>feature<comma><space>if<space>needed<lf><space><space><space><space><space><space><space><space>log_attr<space>=<space>feature.getAttribute<openparen>ATTR_LOG_ATTRIBUTE<closeparen><lf><space><space><space><space><space><space><space><space>if<space>log_attr<space>==<space>LOG_ATTR_MSGNONE:<lf><space><space><space><space><space><space><space><space><space><space><space><space>return<lf><space><space><space><space><space><space><space><space>log_feature<space>=<space>fmeobjects.FMEFeature<openparen><closeparen><lf><space><space><space><space><space><space><space><space>log_feature.setAttribute<openparen>ATTR_LOG_OUTPUT_TIME<comma><space>log_time<closeparen><lf><space><space><space><space><space><space><space><space>log_feature.setAttribute<openparen>ATTR_LOG_OUTPUT_LEVEL<comma><space>LOG_TYPES<openbracket>self.log_type<closebracket><closeparen><lf><space><space><space><space><space><space><space><space>if<space>log_attr<space>==<space>LOG_ATTR_MSGLINE:<lf><space><space><space><space><space><space><space><space><space><space><space><space>message<space>=<space><apos><backslash>n<apos>.join<openparen>lines<closeparen><lf><space><space><space><space><space><space><space><space>message<space>=<space>self.to_unicode<openparen>message<comma><space>utf8<closeparen><lf><space><space><space><space><space><space><space><space>log_feature.setAttribute<openparen>ATTR_LOG_OUTPUT_MESSAGE<comma><space>message<closeparen><lf><space><space><space><space><space><space><space><space>self.pyoutput<openparen>log_feature<closeparen><lf><lf><space><space><space><space><at>staticmethod<lf><space><space><space><space>def<space>to_str<openparen>value<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Safely<space>encodes<space>to<space>UTF8<space>str<space>only<space>if<space>it<apos>s<space>Python<space>2<space>unicode.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>if<space>PY2<space>and<space>isinstance<openparen>value<comma><space>unicode<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>convert<space>Python<space>2<space>unicode<space>to<space>str<space>using<space>UTF8<space>encoding<lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space>value.encode<openparen><apos>utf8<apos><closeparen><comma><space>True<lf><space><space><space><space><space><space><space><space>return<space>value<comma><space>False<lf><space><space><space><space><space><space><space><space><lf><space><space><space><space><at>staticmethod<lf><space><space><space><space>def<space>to_unicode<openparen>value<comma><space>decode<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Safely<space>decodes<space>to<space>unicode<space>only<space>if<space>it<space>was<space>UTF8<space>encoded<space>earlier.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>if<space>PY2<space>and<space>decode<space>and<space>not<space>isinstance<openparen>value<comma><space>unicode<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>convert<space>str<space>to<space>Python<space>2<space>unicode<space>using<space>UTF8<space>decoding<lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space>value.decode<openparen><apos>utf8<apos><closeparen><lf><space><space><space><space><space><space><space><space>return<space>value<lf><lf><space><space><space><space>def<space>get_line<openparen>self<comma><space>feature<comma><space>line_attribute<comma><space>encode<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Creates<space>a<space>line<space>based<space>on<space>user<space>input.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>line_type<space>=<space>feature.getAttribute<openparen>line_attribute<closeparen><lf><space><space><space><space><space><space><space><space>line<space>=<space><apos><apos><lf><space><space><space><space><space><space><space><space>if<space>line_type<space>==<space>LOG_LINE_BLANK:<lf><space><space><space><space><space><space><space><space><space><space><space><space>line<space>=<space><apos><space><apos><space><space>#<space>space<space>to<space>prevent<space>trimdown<space>to<space>nothing<space>in<space>Translation<space>Log<space>Window<lf><space><space><space><space><space><space><space><space>elif<space>line_type<space>in<space><openparen>LOG_LINE_DASH<comma><space>LOG_LINE_SOLID<comma><space>LOG_LINE_MINUS<comma><space>LOG_LINE_PLUS<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>line<space>=<space>line_type<openbracket>:2<closebracket><space>*<space>39<space><space><space>#<space>a<space>line<space>is<space>max<space>78<space>chars<space>long<space><openparen>FME<space>standard<space>log<closeparen><lf><space><space><space><space><space><space><space><space>else:<lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space>line<lf><space><space><space><space><space><space><space><space>if<space>encode:<lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space>line.encode<openparen><apos>utf8<apos><closeparen><lf><space><space><space><space><space><space><space><space>return<space>line<lf><space><space><space><space><lf><space><space><space><space>def<space>set_log_type<openparen>self<comma><space>feature<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Reads<space>log<space>type<space><openparen>error<comma><space>info<space>etc.<closeparen><space>and<space>sets<space>class<space>variable.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space>log_type<space>=<space>int<openparen>feature.getAttribute<openparen>ATTR_LOG_TYPE<closeparen><closeparen><lf><space><space><space><space><space><space><space><space>except:<lf><space><space><space><space><space><space><space><space><space><space><space><space>pass<space><space>#<space>value<space>could<space>not<space>be<space>converted<space>to<space>int<comma><space>keep<space>default<lf><space><space><space><space><space><space><space><space>if<space>log_type<space>in<space>LOG_TYPES:<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.log_type<space>=<space>log_type<lf><space><space><space><space><lf><space><space><space><space>def<space>set_log_moment<openparen>self<comma><space>feature<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Reads<space>log<space>moment<space><openparen>each<comma><space>first<comma><space>last<closeparen><space>and<space>sets<space>+<space>returns<space>class<space>variable.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>log_moment<space>=<space>feature.getAttribute<openparen>ATTR_LOG_MOMENT<closeparen><lf><space><space><space><space><space><space><space><space>if<space>log_moment<space>in<space><openparen>LOG_MOMENT_EACH<comma><space>LOG_MOMENT_FIRST<comma><space>LOG_MOMENT_LAST<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.log_moment<space>=<space>log_moment<lf><space><space><space><space><space><space><space><space>return<space>self.log_moment<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>close<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>PythonCaller<space>close<space>method.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>if<space>self.buffer<space>and<space>self.log_moment<space>==<space>LOG_MOMENT_LAST:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>if<space>there<apos>s<space>a<space>feature<space>in<space>the<space>buffer<comma><space>it<apos>s<space>the<space>last<space>one<comma><space>so<space>process<space>it<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.log_message<openparen>self.buffer.clone<openparen><closeparen><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>self.pyoutput<openparen>self.buffer<closeparen><lf><space><space><space><space><space><space><space><space>del<space>self    OUTPUT PYOUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_PythonLogger_OUTPUT"

# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_Tester    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_PythonLogger_OUTPUT"    TEST _logwriter.level ATTRIBUTE_IS_MISSING "" ENCODED TEST _logwriter.message ATTRIBUTE_IS_MISSING "" ENCODED TEST _logwriter.time ATTRIBUTE_IS_MISSING "" ENCODED    BOOLEAN_OPERATOR AND    OUTPUT PASSED FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FAILED FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Tester_FAILED"
# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(LogWriter_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_AttributeRemover_2    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Tester_FAILED"    OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"        @RemoveAttributes(fme_encoded,__log_message,__log_line_top,__log_type,__log_feature,__log_moment,__log_line_bottom)        @RemoveAttributes(fme_pcre_match"$($(LogWriter_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP)")

# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(LogWriter_WORKSPACE_NAME)_AttributeRemover_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_AttributeRemover    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,__log_message,__log_line_top,__log_type,_logwriter.message,__log_feature,__log_moment,_logwriter.level,__log_line_bottom,_logwriter.time)        @RemoveAttributes(fme_pcre_match"$($(LogWriter_WORKSPACE_NAME)_AttributeRemover_LIST_EXP)")

FACTORY_DEF * TeeFactory   FACTORY_NAME "$(LogWriter_WORKSPACE_NAME)_Output1505203529 Output Collector"   INPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(LogWriter_WORKSPACE_NAME)_LogMessages1505203529 Output Collector"   INPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"   OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_LogMessages"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(LogWriter_WORKSPACE_NAME))}]
#! <?xml version="1.0" encoding="UTF-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN LogWriter,1,Workflows,196c8821-eae8-4857-80e4-9206a386c6af,"Linked by Default",No,NO_PARALLELISM,,No,16174,YES,No
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Logs custom messages to the FME log file.</p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">The LogWriter respects the logging settings (Tools &gt; FME Options &gt; Translation). This means that if e.g. <span style=" font-style:italic;">Information</span> logging has been disabled and you try to write INFORM messages with this transformer, nothing will be written.</p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Please note that only ASCII message strings are supported!</p>
# 
# TRANSFORMER_END
#!   LAST_SAVE_DATE="2016-02-29T16:04:58"
#!   FME_LINKED_TRANSFORMER_VERSION="1"
#!   FMX_INSERT_MODE="Linked by Default"
#!   DOC_TOP_LEFT="-1255.07 -119"
#!   FME_PROCESS_GROUP_BY=""
#!   FME_SERVER_SERVICES=""
#!   DOC_EXTENTS="3019.71 237.876"
#!   DESCRIPTION="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Logs custom messages to the FME log file.&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;The LogWriter respects the logging settings (Tools &amp;gt; FME Options &amp;gt; Translation). This means that if e.g. &lt;span style=&quot; font-style:italic;&quot;&gt;Information&lt;/span&gt; logging has been disabled and you try to write INFORM messages with this transformer, nothing will be written.&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Please note that only ASCII message strings are supported!&lt;/p&gt;&#10;"
#!   HISTORY="7&lt;solidus&gt;1&lt;solidus&gt;2016,Sander&lt;space&gt;Schaminee&lt;space&gt;&lt;openparen&gt;SmarterBetterCities&lt;space&gt;AG&lt;closeparen&gt;,Initial&lt;space&gt;creation"
#!   FME_DOCUMENT_PRIORGUID="3a0f45a1-f273-4351-a29d-b6d77fa1a90b,5cafdf50-2d4d-489d-8321-bcf88f516a9a,58eb6a06-468a-433e-a29f-05cca749b6ea,2b0be9bb-3b49-4c03-babc-843429b6d85c,05be59f9-ad66-4e3c-b182-6816adace288,41c686c5-9d95-4621-9e3c-81ed615ff744,f8fc65dc-2bf4-4ba1-90dd-1d1bfc7f4b7f,51fc4149-34bd-409b-be27-60e84995c31a,e0dc8801-5209-4baf-a827-2ce6d297c417,66c37a4f-bffa-480c-a72b-2f4171508cf9,8483083c-b8d2-4951-b354-0458d0a4e8e6"
#!   REQUIREMENTS="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;FME2016+ &lt;/p&gt;&#10;"
#!   USAGE="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-weight:600;&quot;&gt;Log On&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Determines when the message will be logged. You can log each feature or just one. In the latter case, only the &lt;span style=&quot; text-decoration: underline;&quot;&gt;first&lt;/span&gt; feature that enters the transformer will be logged.&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-weight:600;&quot;&gt;Log Type&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Set the type of message you want to log. In FME Workbench, warnings will be logged in blue, (fatal) errors in red and all other types in black.&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-weight:600;&quot;&gt;Log Message&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;The (ASCII) text you want to log. This can be based upon an attribute value, but it can also be a fixed message. Please note that in the latter case, only 1 message will be logged if &lt;span style=&quot; font-style:italic;&quot;&gt;Log On&lt;/span&gt; was set to &quot;Every Feature&quot;, because duplicates will be removed automatically. &lt;/p&gt;&#10;"
#!   VIEW_POSITION="-4365.67 2215.65"
#!   FME_BUILD_NUM="16174"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   PASSWORD=""
#!   ZOOM_SCALE="100"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   SHOW_INFO_NODES="true"
#!   REQUIREMENTS_KEYWORD="none"
#!   ITERATION_COUNT_ATTR=""
#!   ATTR_TYPE_ENCODING="SDF"
#!   FME_DOCUMENT_GUID="196c8821-eae8-4857-80e4-9206a386c6af"
#!   LAST_SAVE_BUILD="FME(R) 2016.0.1.0 (20160130 - Build 16174 - WIN64)"
#!   TITLE="LogWriter"
#!   CATEGORY="Workflows"
#!   BLOCKED_LOOPING="No"
#!   MAX_LOOP_ITERATIONS=""
#!   LEGAL_TERMS_CONDITIONS="&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;"
#!   WORKSPACE_VERSION="1"
#!   SHOW_ANNOTATIONS="true"
#!   XFORM_DEPRECATED="No"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI LOOKUP_CHOICE_OR_ATTR LOG_MOMENT Every&lt;space&gt;Feature,0%First&lt;space&gt;Feature,1 Log On:"
#!   DEFAULT_VALUE="1"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI LOOKUP_CHOICE_OR_ATTR LOG_TYPE Information,0%Warning,1%Error,2%Fatal&lt;space&gt;Error,3%Statistics,4%Status&lt;space&gt;Report,5 Log Type:"
#!   DEFAULT_VALUE="1"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI TEXT_EDIT_OR_NUM_OR_ATTR __MESSAGESTRING Log Message:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI IGNORE OPTIONAL INTEGER_OR_ATTR _LOG_MOMENT Log Moment:"
#!   DEFAULT_VALUE="$(LOG_MOMENT)"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI IGNORE OPTIONAL INTEGER_OR_ATTR _LOG_TYPE Log Type:"
#!   DEFAULT_VALUE="$(LOG_TYPE)"
#!   IS_STAND_ALONE="true"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="1"
#!   TYPE="PythonCaller"
#!   VERSION="4"
#!   POSITION="752.07 118.876"
#!   BOUNDING_RECT="752.07 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="16174"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__messageString" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__logType" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="HIDE_ATTRIBUTES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PYTHONSYMBOL" PARM_VALUE="FeatureProcessor"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="PythonLogger"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PYTHONSOURCE" PARM_VALUE="import&lt;space&gt;fme&lt;lf&gt;import&lt;space&gt;fmeobjects&lt;lf&gt;&lt;lf&gt;class&lt;space&gt;FeatureProcessor&lt;openparen&gt;object&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;__init__&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log&lt;space&gt;=&lt;space&gt;fmeobjects.FMELogFile&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;input&lt;openparen&gt;self&lt;comma&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;FME&lt;space&gt;message&lt;space&gt;types:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;FME_INFORM&lt;space&gt;=&lt;space&gt;0&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;FME_WARN&lt;space&gt;=&lt;space&gt;1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;FME_ERROR&lt;space&gt;=&lt;space&gt;2&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;FME_FATAL&lt;space&gt;=&lt;space&gt;3&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;FME_STATISTIC&lt;space&gt;=&lt;space&gt;4&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;FME_STATUSREPORT&lt;space&gt;=&lt;space&gt;5&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;messageType&lt;space&gt;=&lt;space&gt;int&lt;openparen&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__logType&lt;apos&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;messageString&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__messageString&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;messageString&lt;space&gt;is&lt;space&gt;not&lt;space&gt;None:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;format&lt;openparen&gt;messageString&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;messageType&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;pass&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;if&lt;space&gt;the&lt;space&gt;message&lt;space&gt;is&lt;space&gt;malformed&lt;comma&gt;&lt;space&gt;None&lt;space&gt;or&lt;space&gt;non-ASCII&lt;comma&gt;&lt;space&gt;silently&lt;space&gt;ignore&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;feature&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;close&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;del&lt;space&gt;self.log"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="3"
#!   TYPE="Sampler"
#!   VERSION="2"
#!   POSITION="244.815 118.876"
#!   BOUNDING_RECT="244.815 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="16148"
#! >
#!     <OUTPUT_FEAT NAME="SAMPLED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__messageString" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__logType" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="NOT_SAMPLED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="__messageString" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__logType" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SAMPLE_TYPE_LONG" PARM_VALUE="First N Features"/>
#!     <XFORM_PARM PARM_NAME="RATE" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Limiter"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SAMPLE_MODE" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="4"
#!   TYPE="Tester"
#!   VERSION="2"
#!   POSITION="-248.94 118.876"
#!   BOUNDING_RECT="-248.94 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="16148"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__messageString" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__logType" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="__messageString" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__logType" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST $(_LOG_MOMENT) = 1"/>
#!     <XFORM_PARM PARM_NAME="TEST_DESCRIPTION" PARM_VALUE="&quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester"/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="Automatic"/>
#!     <XFORM_PARM PARM_NAME="TEST_LIST" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="13"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="1255.26 118.876"
#!   BOUNDING_RECT="1255.26 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="16148"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__logType,__messageString"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="17"
#!   TYPE="ParameterFetcher"
#!   VERSION="4"
#!   POSITION="-747.883 118.876"
#!   BOUNDING_RECT="-747.883 118.876 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="16148"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__messageString" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__logType" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ParameterFetcher"/>
#!     <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="__logType {$(_LOG_TYPE)}"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="9"
#!   NAME="Input"
#!   POSITION="-1255.07 118.876"
#!   BOUNDING_RECT="-1255.07 118.876 -1 -1"
#!   COLLAPSED="false"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#!     <XFORM_ATTR ATTR_NAME="__messageString" ATTR_VALUE="$(__MESSAGESTRING)" />
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="11"
#!   NAME="Output"
#!   POSITION="1764.64 118.876"
#!   BOUNDING_RECT="1764.64 118.876 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="5"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="1"
#!   SOURCE_PORT_DESC="fo 0"
#!   TARGET_PORT_DESC="fi 0"
#!   ENABLED="true"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="7"
#!   SOURCE_NODE="4"
#!   TARGET_NODE="3"
#!   SOURCE_PORT_DESC="fo 0"
#!   TARGET_PORT_DESC="fi 0"
#!   ENABLED="true"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="8"
#!   SOURCE_NODE="4"
#!   TARGET_NODE="1"
#!   SOURCE_PORT_DESC="fo 1"
#!   TARGET_PORT_DESC="fi 0"
#!   ENABLED="true"
#!   EXTRA_POINTS="207 -116 673 -119"
#! />
#! <FEAT_LINK
#!   IDENTIFIER="14"
#!   SOURCE_NODE="1"
#!   TARGET_NODE="13"
#!   SOURCE_PORT_DESC="fo 0"
#!   TARGET_PORT_DESC="fi 0"
#!   ENABLED="true"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="13"
#!   TARGET_NODE="11"
#!   SOURCE_PORT_DESC="fo 0"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="18"
#!   SOURCE_NODE="9"
#!   TARGET_NODE="17"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0"
#!   ENABLED="true"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="19"
#!   SOURCE_NODE="17"
#!   TARGET_NODE="4"
#!   SOURCE_PORT_DESC="fo 0"
#!   TARGET_PORT_DESC="fi 0"
#!   ENABLED="true"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)_LOG_MOMENT 1
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)_LOG_TYPE 1
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)___MESSAGESTRING 
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)__LOG_MOMENT $(LOG_MOMENT)
DEFAULT_MACRO $(LogWriter_WORKSPACE_NAME)__LOG_TYPE $(LOG_TYPE)
#! START_HEADER
#! END_HEADER

LOG_FILTER_MASK -1
DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO LogWriter_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(LogWriter_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(LogWriter_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(LogWriter_WORKSPACE_NAME)_Input1456758298 Input Splitter"   INPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Input" "@EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV,__messageString,$($(LogWriter_WORKSPACE_NAME)___MESSAGESTRING), FEATURE_TYPE)"
# -------------------------------------------------------------------------

Tcl2 proc $(LogWriter_WORKSPACE_NAME)_ParameterFetcher_doFetch {} {    foreach {name val} {"__logType {$($(LogWriter_WORKSPACE_NAME)__LOG_TYPE$encode)}"} {         if { [string match {*<at>*} $val] == 1 } {             set val [FME_Execute EvaluateExpression {STRING} $val {$(LogWriter_WORKSPACE_NAME)_ParameterFetcher}];         } elseif {[string match {*FME_CONDITIONAL*} $val] == 1} {             set val [FME_Execute EvaluateExpression {STRING} $val {$(LogWriter_WORKSPACE_NAME)_ParameterFetcher}];         } else {             set val [FME_DecodeTextOrAttr $val];         };       FME_SetAttribute [FME_DecodeText $name] $val    } }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_ParameterFetcher    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Input"    OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"         @Tcl2($(LogWriter_WORKSPACE_NAME)_ParameterFetcher_doFetch)

# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_Tester    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"    TEST @EvaluateExpression(FDIV,STRING_ENCODED,$($(LogWriter_WORKSPACE_NAME)__LOG_MOMENT$encode),$(LogWriter_WORKSPACE_NAME)_Tester) = 1 ENCODED    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FAILED FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Tester_FAILED"
# -------------------------------------------------------------------------

INCLUDE [ puts "MACRO REAL_RATE [expr 1 * -1 ]" ]
FACTORY_DEF * SamplingFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_Limiter    SAMPLE_RATE $(REAL_RATE)    SAMPLE_ORDER ORIGINAL    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT SAMPLED FEATURE_TYPE ___SAMPLED___
# This TeeFactory is needed because Sampler will still output features if it has no OUTPUT clauses specified.
# This way we behave nicely even if there are no output connections on the transformer. See PR#28886.

FACTORY_DEF * TeeFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_Limiter_Sampled    INPUT FEATURE_TYPE ___SAMPLED___    OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Limiter_SAMPLED"


# -------------------------------------------------------------------------


FME_PYTHON_PATH "$(FME_MF_DIR)"

FACTORY_DEF * PythonFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_PythonLogger    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Limiter_SAMPLED"    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Tester_FAILED"    SYMBOL_NAME FeatureProcessor    PYTHON_NAMESPACE FMEOBJECTS    SOURCE_CODE import<space>fme<lf>import<space>fmeobjects<lf><lf>class<space>FeatureProcessor<openparen>object<closeparen>:<lf><space><space><space><space>def<space>__init__<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>self.log<space>=<space>fmeobjects.FMELogFile<openparen><closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>input<openparen>self<comma>feature<closeparen>:<lf><space><space><space><space><space><space><space><space>#<space>FME<space>message<space>types:<lf><space><space><space><space><space><space><space><space>#<space>FME_INFORM<space>=<space>0<lf><space><space><space><space><space><space><space><space>#<space>FME_WARN<space>=<space>1<lf><space><space><space><space><space><space><space><space>#<space>FME_ERROR<space>=<space>2<lf><space><space><space><space><space><space><space><space>#<space>FME_FATAL<space>=<space>3<lf><space><space><space><space><space><space><space><space>#<space>FME_STATISTIC<space>=<space>4<lf><space><space><space><space><space><space><space><space>#<space>FME_STATUSREPORT<space>=<space>5<lf><space><space><space><space><space><space><space><space>messageType<space>=<space>int<openparen>feature.getAttribute<openparen><apos>__logType<apos><closeparen><closeparen><lf><space><space><space><space><space><space><space><space>messageString<space>=<space>feature.getAttribute<openparen><apos>__messageString<apos><closeparen><lf><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>messageString<space>is<space>not<space>None:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen>format<openparen>messageString<closeparen><comma><space>messageType<closeparen><lf><space><space><space><space><space><space><space><space>except:<lf><space><space><space><space><space><space><space><space><space><space><space><space>pass<space><space><space><space>#<space>if<space>the<space>message<space>is<space>malformed<comma><space>None<space>or<space>non-ASCII<comma><space>silently<space>ignore<lf><space><space><space><space><space><space><space><space>self.pyoutput<openparen>feature<closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>close<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>del<space>self.log    OUTPUT PYOUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_PythonLogger_OUTPUT"

# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(LogWriter_WORKSPACE_NAME)_AttributeRemover_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(LogWriter_WORKSPACE_NAME)_AttributeRemover    INPUT  FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_PythonLogger_OUTPUT"    OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,__logType,__messageString)        @RemoveAttributes(fme_pcre_match"$($(LogWriter_WORKSPACE_NAME)_AttributeRemover_LIST_EXP)")

FACTORY_DEF * TeeFactory   FACTORY_NAME "$(LogWriter_WORKSPACE_NAME)_Output1456758298 Output Collector"   INPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(LogWriter_WORKSPACE_NAME)_Output"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(LogWriter_WORKSPACE_NAME))}]















